(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{490:function(e,t,a){"use strict";a.r(t);var v=a(1),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"mysql-常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-常见问题"}},[e._v("#")]),e._v(" MySQL 常见问题")]),e._v(" "),a("h2",{attrs:{id:"_1-java-sql-sqlsyntaxerrorexception-duplicate-key-name-xxx-idx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-java-sql-sqlsyntaxerrorexception-duplicate-key-name-xxx-idx"}},[e._v("#")]),e._v(" [1]java.sql.SQLSyntaxErrorException: Duplicate key name 'xxx_idx'")]),e._v(" "),a("p",[a("code",[e._v("Eurynome Cloud")]),e._v(" 默认使用"),a("code",[e._v("Spring Data JPA")]),e._v("进行基础功能的编写, 采用 "),a("code",[e._v("Hibernate")]),e._v(" （"),a("code",[e._v("JPA")]),e._v("的一种实现）提供的 "),a("code",[e._v("ddl-auto")]),e._v("进行基础表的创建和更新。")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),a("p",[e._v("什么是 "),a("code",[e._v("Spring Data JPA")]),e._v("， 参见：基础知识章节，"),a("RouterLink",{attrs:{to:"/basic-knowledge/spring-data-jpa.html"}},[e._v("Spring Data JPA")])],1),e._v(" "),a("p",[e._v("ddl-auto 怎么用，参见：更换数据库章节，[spring-boot-starter-data-jpa 更换数据库方式](../documents/更换数据库.md#spring-boot-starter-data-jpa 更换数据库方式)")])]),e._v(" "),a("h3",{attrs:{id:"hibernate方言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hibernate方言"}},[e._v("#")]),e._v(" Hibernate方言")]),e._v(" "),a("p",[e._v("在 "),a("code",[e._v("Hibernate")]),e._v(" 底层依然使用"),a("code",[e._v("SQL")]),e._v("语句来执行数据库操作，虽然所有关系型数据库都支持使用标准 "),a("code",[e._v("SQL")]),e._v(" 语句，但所有数据库都对标准 "),a("code",[e._v("SQL")]),e._v(" 进行了一些扩展，所以在语法细节上存在一些差异，因此 "),a("code",[e._v("Hibernate")]),e._v(" 需要根据数据库来识别这些差异。假如系统需要数据库的变换时，那么用 "),a("code",[e._v("hibernate")]),e._v(" 的话就只需要改一改配置文件（修改连接字符串,驱动类,方言等），而用传统的"),a("code",[e._v("jdbc")]),e._v("时，那么"),a("code",[e._v("SQL")]),e._v("语言可能就要有很多改动。（略微重复了）")]),e._v(" "),a("p",[e._v("Hibernate 方言为实现"),a("code",[e._v("HQL")]),e._v("语句向不同数据库的 "),a("code",[e._v("SQL")]),e._v(" 语句转换时，解决不同数据库之间的差异而制定的一套”规范”。")]),e._v(" "),a("p",[e._v("举例来说，我们在"),a("code",[e._v("MySQL")]),e._v("数据库里进行分页查询，只需使用"),a("code",[e._v("limit")]),e._v("关键字就可以了；而标准SQL并不支持"),a("code",[e._v("limit")]),e._v("关键字，例如Oracle则需要使用行内视图的方式来进行分页。同样的应用程序，当我们在不同数据库之间迁移时，底层数据库的访问细节会发生改变，而 "),a("code",[e._v("Hibernate")]),e._v(" 也为这种改变做好了准备，现在我们需要做的是：告诉Hibernate应用程序的底层即将使用哪种数据库——这就是Hibernate方言。")]),e._v(" "),a("h3",{attrs:{id:"说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[e._v("#")]),e._v(" 说明")]),e._v(" "),a("p",[e._v("因为不同数据库自身的特殊性，那么不同数据库方言的实现逻辑也不能完全相同。出现这个问题是因为MySQL 方言自身所导致，如果已经存在外键，那么就会抛出错误，但是不会影响实际使用。PostgreSQL方案就不会出现问题。")]),e._v(" "),a("p",[a("strong",[e._v("解决的办法是：")])]),e._v(" "),a("p",[e._v("在使用MySQL数据库时，在首次进行数据库表创建时，需要将"),a("code",[e._v("eurynome-cloud-environment.yaml")]),e._v("配置中的"),a("code",[e._v("herodotus.switch.database.ddl-auto")]),e._v("修改为"),a("code",[e._v("create")]),e._v("。当所有的表创建成功后，将"),a("code",[e._v("herodotus.switch.database.ddl-auto")]),e._v("值修改为"),a("code",[e._v("none")]),e._v("。那么在次启动就不会出现这个问题。")])])}),[],!1,null,null,null);t.default=_.exports}}]);