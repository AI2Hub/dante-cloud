(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{481:function(t,e,o){"use strict";o.r(e);var r=o(1),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"前言"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),o("h2",{attrs:{id:"athena-是什么"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#athena-是什么"}},[t._v("#")]),t._v(" Athena 是什么？")]),t._v(" "),o("ul",[o("li",[o("strong",[t._v("Eurynome Cloud Athena")]),t._v(" 是从 "),o("strong",[t._v("Eurynome Cloud")]),t._v(" 中提取出来的,可以独立运行的,基于OAuth2认证的,前后端分离的单体式后台管理脚手架。")]),t._v(" "),o("li",[o("strong",[t._v("Eurynome Cloud Athena")]),t._v(" 本质上就是"),o("code",[t._v("eurynome-cloud-oauth-starter")]),t._v("的应用。从pom中可以看到该工程核心依赖就是 "),o("strong",[t._v("Eurynome Cloud")]),t._v(" 中"),o("code",[t._v("eurynome-cloud-oauth-starter")]),t._v("。")]),t._v(" "),o("li",[o("strong",[t._v("Eurynome Cloud Athena")]),t._v(" 更多的是一个演示性工程，用来示例如何使用"),o("code",[t._v("eurynome-cloud-oauth-starter")]),t._v("，以及相关的配置参数是如何配置的。也可以完全不用照搬Athena工程，自己新建一个"),o("code",[t._v("Spring Boot")]),t._v("工程，添加"),o("code",[t._v("eurynome-cloud-oauth-starter")]),t._v("依赖和相应的配置也可以使用。")])]),t._v(" "),o("h2",{attrs:{id:"athena-不是什么"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#athena-不是什么"}},[t._v("#")]),t._v(" Athena 不是什么？")]),t._v(" "),o("p",[o("strong",[t._v("Eurynome Cloud Athena")]),t._v(" 并不是一个完整的开源项目，其核心代码"),o("code",[t._v("eurynome-cloud-oauth-starter")]),t._v("，需要通过编译 "),o("strong",[t._v("Eurynome Cloud")]),t._v(" 生成（目前 "),o("strong",[t._v("Eurynome Cloud")]),t._v(" 核心包并没有提交至Maven中央仓库）。")]),t._v(" "),o("h2",{attrs:{id:"为什么-athena-和-eurynome-cloud-共享代码"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#为什么-athena-和-eurynome-cloud-共享代码"}},[t._v("#")]),t._v(" 为什么 Athena 和 Eurynome Cloud 共享代码？")]),t._v(" "),o("p",[t._v("不管是单独搭建基于"),o("code",[t._v("Spring Security")]),t._v(","),o("code",[t._v("OAuth2")]),t._v("的后台管理脚手架，还是构建基于Spring Cloud的分布式微服务架构，"),o("code",[t._v("Spring Security")]),t._v("和"),o("code",[t._v("OAuth2")]),t._v("核心代码的应用方式都是不变的，可以是通用的，因此将"),o("code",[t._v("Security")]),t._v("和"),o("code",[t._v("OAuth2")]),t._v("以及其它通用的代码放在 "),o("strong",[t._v("Eurynome Cloud")]),t._v(" 中，编译后供 "),o("strong",[t._v("Eurynome Cloud Athena")]),t._v(" 使用。")]),t._v(" "),o("p",[t._v("曾经也考虑过，在重新提取一个工程，专门放置通用代码。但是这种方式，额外多了一道编译手续，也不便于对 "),o("strong",[t._v("Eurynome Cloud")]),t._v(" 整个代码的了解和使用，因此放弃了这种方式。")]),t._v(" "),o("h2",{attrs:{id:"为什么构建-athena"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#为什么构建-athena"}},[t._v("#")]),t._v(" 为什么构建 Athena？")]),t._v(" "),o("p",[t._v("基于"),o("code",[t._v("Spring Cloud")]),t._v("和"),o("code",[t._v("Spring Cloud Alibaba")]),t._v("的微服务架构，已经成为应用建设的主流方案。但是不可否认的是，搭建一套微服务架构所需的基础架构越来越多，也越来越复杂，所需的配套资源也越来越大。仅仅是在开发电脑上搭建一套运行开发调试环境，其复杂度和所需的资源也不容小觑。而很多应用，特别是小型应用，在早期开发中或者用户量不大的前期完全没有必要上一整套微服务，额外增加复杂度。很多情况下一套单体的,前后端分离的后台就足以满足。")]),t._v(" "),o("p",[t._v("因为以上的考虑，才构建的 "),o("strong",[t._v("Eurynome Cloud Athena")]),t._v("。其实只要"),o("code",[t._v("Spring Security")]),t._v("和"),o("code",[t._v("OAuth2")]),t._v("核心代码写的足够通用，单体式架构就自然而然的产生了。")]),t._v(" "),o("p",[o("strong",[t._v("Eurynome Cloud Athena")]),t._v(" 不需要搭建"),o("code",[t._v("Nacos")]),t._v(","),o("code",[t._v("ELK")]),t._v(","),o("code",[t._v("Sentinel")]),t._v(","),o("code",[t._v("Skywalking")]),t._v("等基础设施，只要一个数据库就可以独立运行，而且具备微服务架构除服务管理以外的所有功能。不仅编译和运行速度有几倍的提升，而且只要代码规范,分包合理，可以快速无缝迁移到微服务架构。这有助于在项目早期快速建设项目，方便开发人员在本地进行开发以及技术研究。")]),t._v(" "),o("p",[t._v("如果你没有大量的时间和资源搭建微服务架构，那么就可以尝试使用 "),o("strong",[t._v("Eurynome Cloud Athena")]),t._v("，可以从另一个角度快速,全面地了解 "),o("strong",[t._v("Eurynome Cloud")]),t._v("。")])])}),[],!1,null,null,null);e.default=a.exports},483:function(t,e,o){"use strict";o.r(e);var r=o(1),a=Object(r.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h1",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[this._v("#")]),this._v(" 前言")]),this._v(" "),e("div",{staticClass:"custom-block info"},[e("p",{staticClass:"custom-block-title"},[this._v("说明")]),this._v(" "),e("p",[this._v("介绍微服务相关技术内容")])])])}),[],!1,null,null,null);e.default=a.exports},489:function(t,e,o){"use strict";o.r(e);var r=o(1),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"前言"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),o("div",{staticClass:"custom-block info"},[o("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),o("p",[t._v("本部分会梳理,总结使用者经常提出的一些问题，形成文档方便大家查阅，以便帮助使用者快速定位和解决问题。")]),t._v(" "),o("p",[t._v("每个使用者所使用的微服务基础环境都不可能完全相同，因此，可能存在无法全面覆盖,满足所有场景的情况。")]),t._v(" "),o("p",[t._v("同时，文档中的解决办法，只是作者根据自己的情况进行解决的办法，可能不是最优的解决办法。")]),t._v(" "),o("p",[t._v("所以，如果发现了使用上的问题,或者针对某些问题有更优的解决办法，欢迎广大使用者提"),o("a",{attrs:{href:"https://gitee.com/herodotus/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("【Issue】"),o("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);