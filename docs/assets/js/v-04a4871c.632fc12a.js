"use strict";(self.webpackChunkeurynome_cloud_document=self.webpackChunkeurynome_cloud_document||[]).push([[148],{8871:(a,n,s)=>{s.r(n),s.d(n,{data:()=>e});const e={key:"v-04a4871c",path:"/documents/%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.html",title:"注意事项",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"v2.5.5.0 版本注意事项",slug:"v2-5-5-0-版本注意事项",children:[{level:3,title:"[1]、一定要修改Nacos配置后再运行服务",slug:"_1-、一定要修改nacos配置后再运行服务",children:[]}]}],filePathRelative:"documents/注意事项.md",git:{updatedTime:null,contributors:[]}}},7314:(a,n,s)=>{s.r(n),s.d(n,{default:()=>t});const e=(0,s(6252).uE)('<h1 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h1><p>本章节主要介绍，升级至不同版本所需要注意的事项，以减少版本差异带来的系统运行、配置部署问题。</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p>当你更新代码后，发现版本号有变化，需要重新编译工程代码，进行重新部署后再使用。</p></div><h2 id="v2-5-5-0-版本注意事项" tabindex="-1"><a class="header-anchor" href="#v2-5-5-0-版本注意事项" aria-hidden="true">#</a> v2.5.5.0 版本注意事项</h2><p>v2.5.5.0 版本以前，<strong>Eurynome Cloud</strong> 数据库初始化主要采用业务表自动创建和OAuth2部分表手工创建的方式。为了让数据库初始化工作更加便捷，v2.5.5.0 版本将原有需要手工创建的OAuth2数据表，全部改造为自动创建。</p><p>OAuth2中，涉及数据库操作部分的代码，完全采用纯<code>JDBC</code>、使用原生SQL的方式实现。原生SQL的方式导致SQL语句中各个数据库字段的名称，一定要与实际数据库表字段对应，而且大小写敏感。OAuth2 所有业务表中，90%的字段都是使用小写字母定义，剩余的字段中会存在大小写混合的情况。而使用<code>Spring Data JPA</code>的自动建表机制，会统一使用小写字母进行建表，这样就会导致OAuth2部分业务失效。</p><h3 id="_1-、一定要修改nacos配置后再运行服务" tabindex="-1"><a class="header-anchor" href="#_1-、一定要修改nacos配置后再运行服务" aria-hidden="true">#</a> [1]、一定要修改Nacos配置后再运行服务</h3><p>如果您现在使用的系统，主要是为了研究和学习，没有实际应用的数据。那么建议在工程 <code>${project_home}/platform/eurynome-cloud-management/resources/imports</code> 目录下找到最新版本的Nacos配置，重新导入Nacos的配置，这样就不会出现上述问题。</p><p>如果已经在使用本系统，建议以最小化的方式修改Nacos配置后再使用系统。</p><p>在Nacos中，找到<code>eurynome-cloud-database.yaml</code>，修改配置<code>spring.jpa.hibernate.naming.physical-strategy</code>。</p><p><strong>修改前</strong></p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">jpa</span><span class="token punctuation">:</span>\n    <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>\n      <span class="token key atrule">naming</span><span class="token punctuation">:</span>\n        <span class="token key atrule">physical-strategy</span><span class="token punctuation">:</span> org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>修改后</strong></p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">jpa</span><span class="token punctuation">:</span>\n    <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>\n      <span class="token key atrule">naming</span><span class="token punctuation">:</span>\n        <span class="token key atrule">physical-strategy</span><span class="token punctuation">:</span> cn.herodotus.eurynome.data.jpa.hibernate.HerodotusPhysicalNamingStrategy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',14),t={render:function(a,n){return e}}}}]);