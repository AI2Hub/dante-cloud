"use strict";(self.webpackChunkeurynome_cloud_document=self.webpackChunkeurynome_cloud_document||[]).push([[398],{3657:(e,i,o)=>{o.r(i),o.d(i,{data:()=>a});const a={key:"v-31203a50",path:"/others/Nacos.html",title:"Nacos 常见问题",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"[1]、failover switch is not found, failover00-00---000-VIPSRV_FAILOVER_SWITCH-000---00-00",slug:"_1-、failover-switch-is-not-found-failover00-00-000-vipsrv-failover-switch-000-00-00",children:[]}],filePathRelative:"others/Nacos.md",git:{updatedTime:null,contributors:[]}}},7403:(e,i,o)=>{o.r(i),o.d(i,{default:()=>l});const a=(0,o(6252).uE)('<h1 id="nacos-常见问题" tabindex="-1"><a class="header-anchor" href="#nacos-常见问题" aria-hidden="true">#</a> Nacos 常见问题</h1><h2 id="_1-、failover-switch-is-not-found-failover00-00-000-vipsrv-failover-switch-000-00-00" tabindex="-1"><a class="header-anchor" href="#_1-、failover-switch-is-not-found-failover00-00-000-vipsrv-failover-switch-000-00-00" aria-hidden="true">#</a> [1]、failover switch is not found, failover00-00---000-VIPSRV_FAILOVER_SWITCH-000---00-00</h2><p>将Nacos日志设置到Debug级别，在服务运行起来之后，就会发现控制台持续输出以上Debug信息。</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p>这不是代码Bug，而是Nacos自身机制，想要详细了解请阅读Nacos源代码或自行百度。</p></div><p>这是Nacos Client本地缓存及故障转移机制。在Nacos源代码中，ServiceInfoHolder的构造方法中，会初始化一个FailoverReactor类。FailoverReactor的作用便是用来处理故障转移的。</p><p>FailoverReactor的构造方法会拼接故障根目录：${user.home}/nacos/naming/public/failover，其中public也有可能是其他的自定义命名空间；</p><p>主要逻辑就是：</p><ul><li><p>基本操作就是读取failover目录，查找故障转移【开关】文件为名为“failover00-00---000-VIPSRV_FAILOVER_SWITCH-000---00-00”。</p></li><li><p>如果故障转移文件不存在，则直接返回，不断输出Debug信息。</p></li><li><p>如果故障转移文件存在，比较文件修改时间，如果已经修改，则获取故障转移文件中的内容。</p></li><li><p>故障转移文件中存储了0和1标识。0表示关闭，1表示开启。</p></li><li><p>当为开启状态时，执行线程FailoverFileReader。</p></li><li><p><strong>解决办法</strong></p></li></ul><ol><li>将Nacos日志级别调整为INFO级别以上。</li><li>手动在<code>${user.home}/nacos/naming/public</code>目录下，新建文件<code>failover00-00---000-VIPSRV_FAILOVER_SWITCH-000---00-00</code>。</li></ol>',9),l={render:function(e,i){return a}}}}]);