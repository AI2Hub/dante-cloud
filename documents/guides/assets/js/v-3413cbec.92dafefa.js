"use strict";(self.webpackChunkeurynome_cloud_document=self.webpackChunkeurynome_cloud_document||[]).push([[90],{7635:(e,a,d)=>{d.r(a),d.d(a,{data:()=>t});const t={key:"v-3413cbec",path:"/others/MySQL.html",title:"MySQL 常见问题",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"[1]、 java.sql.SQLSyntaxErrorException: Duplicate key name 'xxx_idx'",slug:"_1-、-java-sql-sqlsyntaxerrorexception-duplicate-key-name-xxx-idx",children:[{level:3,title:"Hibernate方言",slug:"hibernate方言",children:[]},{level:3,title:"说明",slug:"说明",children:[]}]}],filePathRelative:"others/MySQL.md",git:{updatedTime:null,contributors:[]}}},8567:(e,a,d)=>{d.r(a),d.d(a,{default:()=>p});var t=d(6252);const c=(0,t.uE)('<h1 id="mysql-常见问题" tabindex="-1"><a class="header-anchor" href="#mysql-常见问题" aria-hidden="true">#</a> MySQL 常见问题</h1><h2 id="_1-、-java-sql-sqlsyntaxerrorexception-duplicate-key-name-xxx-idx" tabindex="-1"><a class="header-anchor" href="#_1-、-java-sql-sqlsyntaxerrorexception-duplicate-key-name-xxx-idx" aria-hidden="true">#</a> [1]、 java.sql.SQLSyntaxErrorException: Duplicate key name &#39;xxx_idx&#39;</h2><p><code>Eurynome Cloud</code> 默认使用<code>Spring Data JPA</code>进行基础功能的编写, 采用 <code>Hibernate</code> （<code>JPA</code>的一种实现）提供的 <code>ddl-auto</code>进行基础表的创建和更新。</p>',3),o={class:"custom-container tip"},r=(0,t._)("p",{class:"custom-container-title"},"提示",-1),n=(0,t.Uk)("什么是 "),i=(0,t._)("code",null,"Spring Data JPA",-1),l=(0,t.Uk)("， 参见：基础知识章节，"),s=(0,t.Uk)("Spring Data JPA"),u=(0,t._)("p",null,"ddl-auto 怎么用，参见：更换数据库章节，[spring-boot-starter-data-jpa 更换数据库方式](../documents/更换数据库.md#spring-boot-starter-data-jpa 更换数据库方式)",-1),h=(0,t.uE)('<h3 id="hibernate方言" tabindex="-1"><a class="header-anchor" href="#hibernate方言" aria-hidden="true">#</a> Hibernate方言</h3><p>在 <code>Hibernate</code> 底层依然使用<code>SQL</code>语句来执行数据库操作，虽然所有关系型数据库都支持使用标准 <code>SQL</code> 语句，但所有数据库都对标准 <code>SQL</code> 进行了一些扩展，所以在语法细节上存在一些差异，因此 <code>Hibernate</code> 需要根据数据库来识别这些差异。假如系统需要数据库的变换时，那么用 <code>hibernate</code> 的话就只需要改一改配置文件（修改连接字符串、驱动类、方言等），而用传统的<code>jdbc</code>时，那么<code>SQL</code>语言可能就要有很多改动。（略微重复了）</p><p>Hibernate 方言为实现<code>HQL</code>语句向不同数据库的 <code>SQL</code> 语句转换时，解决不同数据库之间的差异而制定的一套”规范”。</p><p>举例来说，我们在<code>MySQL</code>数据库里进行分页查询，只需使用<code>limit</code>关键字就可以了；而标准SQL并不支持<code>limit</code>关键字，例如Oracle则需要使用行内视图的方式来进行分页。同样的应用程序，当我们在不同数据库之间迁移时，底层数据库的访问细节会发生改变，而 <code>Hibernate</code> 也为这种改变做好了准备，现在我们需要做的是：告诉Hibernate应用程序的底层即将使用哪种数据库——这就是Hibernate方言。</p><h3 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h3><p>因为不同数据库自身的特殊性，那么不同数据库方言的实现逻辑也不能完全相同。就拿 <code>Duplicate key name</code> 错误来说，出现这个问题是因为</p>',6),p={render:function(e,a){const d=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[c,(0,t._)("div",o,[r,(0,t._)("p",null,[n,i,l,(0,t.Wm)(d,{to:"/basic-knowledge/spring-data-jpa.html"},{default:(0,t.w5)((()=>[s])),_:1})]),u]),h],64)}}}}]);