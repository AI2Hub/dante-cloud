"use strict";(self.webpackChunkeurynome_cloud_document=self.webpackChunkeurynome_cloud_document||[]).push([[701],{4954:(e,a,n)=>{n.r(a),n.d(a,{data:()=>s});const s={key:"v-eef3d90a",path:"/documents/%E6%9B%B4%E6%8D%A2%E6%95%B0%E6%8D%AE%E5%BA%93.html",title:"更换数据库",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"步骤一：判断是否需要添加数据库方言配置",slug:"步骤一-判断是否需要添加数据库方言配置",children:[]},{level:2,title:"步骤二：修改环境参数",slug:"步骤二-修改环境参数",children:[]},{level:2,title:"步骤三：修改pom.xml",slug:"步骤三-修改pom-xml",children:[]},{level:2,title:"步骤四：添加数据库JDBC Driver",slug:"步骤四-添加数据库jdbc-driver",children:[]},{level:2,title:"步骤五：编译工程代码",slug:"步骤五-编译工程代码",children:[]},{level:2,title:"步骤六：修改工作流服务数据库类型",slug:"步骤六-修改工作流服务数据库类型",children:[]}],filePathRelative:"documents/更换数据库.md",git:{updatedTime:163265271e4,contributors:[{name:"herodotus",email:"pointer_v@qq.com",commits:3}]}}},4454:(e,a,n)=>{n.r(a),n.d(a,{default:()=>x});var s=n(6252);const o=(0,s.uE)('<h1 id="更换数据库" tabindex="-1"><a class="header-anchor" href="#更换数据库" aria-hidden="true">#</a> 更换数据库</h1><h2 id="步骤一-判断是否需要添加数据库方言配置" tabindex="-1"><a class="header-anchor" href="#步骤一-判断是否需要添加数据库方言配置" aria-hidden="true">#</a> 步骤一：判断是否需要添加数据库方言配置</h2><p><strong>Eurynome Cloud</strong> 使用数据库&quot;方言&quot;配置模式，以达到规范化数据库配置、减少参数修改、快速更换数据库的目的。</p><p>目前，<strong>Eurynome Cloud</strong> 默认提供<code>postgresql</code>和<code>mysql8</code>、<code>mysql57</code>三种方言配置。在Nacos的配置中可以找到<code>eurynome-cloud-database-postgresql.yaml</code>和<code>eurynome-cloud-database-mysql8.yaml</code>、<code>eurynome-cloud-database-mysql57.yaml</code>与之对应。</p><p>如果你所使用的数据库，<code>postgresql</code>和<code>mysql8</code>、<code>mysql57</code>三种方言配置并不能满足，那么请按照下面几步操作；如果能满足请跳过。</p><ol><li>在Nacos中新建一个按照格式 <code>eurynome-cloud-database-&lt;database.type&gt;.yaml</code> 命名的配置。</li></ol><p>2.复制下面的配置内容到该配置中，注意不要改变格式以及具体配置名。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">herodotus</span><span class="token punctuation">:</span>\n  <span class="token key atrule">database-information</span><span class="token punctuation">:</span>\n    <span class="token key atrule">platform</span><span class="token punctuation">:</span> postgresql\n    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> org.postgresql.Driver\n    <span class="token key atrule">dialect</span><span class="token punctuation">:</span> org.hibernate.dialect.PostgreSQL10Dialect\n    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>postgresql<span class="token punctuation">:</span>//$<span class="token punctuation">{</span>herodotus.environment.database.host<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>herodotus.environment.database.port<span class="token punctuation">}</span>/$<span class="token punctuation">{</span>herodotus.environment.database.name<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol start="3"><li>根据自己使用的数据库，修改配置中对应的的信息。</li></ol><div class="custom-container tip"><p class="custom-container-title">说明</p><p>eurynome-cloud-database-&lt;database.type&gt;.yaml中，主要包含针对不同类型数据库，所使用的JDBC Driver等相关配置信息。</p><ul><li>platform：指定数据库类型。</li></ul><blockquote><p>注意：platform具体值来源于枚举类<code>org.springframework.orm.jpa.vendor.Database</code>，请使用全部小写字母值进行配置。这个值不分版本，所以mysql5数据库和mysql8数据库均是使用<code>mysql</code>，目前支持的值如下： <code>db2</code>、<code>derby</code>、<code>h2</code>、<code>hana</code>、<code>hsql</code>、<code>informix</code>、<code>mysql</code>、<code>oracle</code>、<code>postgresql</code>、<code>sql_server</code>、<code>sybase</code></p></blockquote><ul><li>driver-class-name：数据库驱动类名。</li><li>dialect: 指定Hibernate针对不同的数据库的Dialect，org.hibernate.dialect 包下可以找到具体数据库对应的dialect。</li><li>url：数据库连接URL。</li></ul><blockquote><p>注意：这里的的URL是通过配置<code>eurynome-cloud-environment.yaml</code>，中的herodotus.environment.database.host、port、name等三个值组装而成。如果新增方言配置，不管具体数据库URL内容是什么，一定确保数据库地址、端口、数据库名使用${herodotus.environment.database.host}、${herodotus.environment.database.port}、${herodotus.environment.database.name}三个站位符替换，否则*-environment.yaml中配置的值将不再生效。</p></blockquote></div><h2 id="步骤二-修改环境参数" tabindex="-1"><a class="header-anchor" href="#步骤二-修改环境参数" aria-hidden="true">#</a> 步骤二：修改环境参数</h2>',11),t=(0,s.Uk)("在根据你所使用的"),c=(0,s.Uk)("Maven多环境"),l=(0,s.uE)("，找到 <code>Nacos</code> 对应 <code>Group</code> 下的<code>eurynome-cloud-environment.yaml</code>配置，修改数据库相关的<code>host</code>、<code>port</code>、<code>name</code>、<code>username</code>、<code>password</code>等几个参数的值。",17),d=(0,s.uE)('<div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">herodotus</span><span class="token punctuation">:</span>\n  <span class="token key atrule">environment</span><span class="token punctuation">:</span>\n    <span class="token key atrule">logstash-server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">5044</span>\n    <span class="token key atrule">gateway-server-addr</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">8847</span>\n    <span class="token key atrule">database</span><span class="token punctuation">:</span>\n      <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1\n      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5432</span>\n      <span class="token key atrule">name</span><span class="token punctuation">:</span> herodotus\n      <span class="token key atrule">username</span><span class="token punctuation">:</span> XXXXX\n      <span class="token key atrule">password</span><span class="token punctuation">:</span> XXXXX\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="步骤三-修改pom-xml" tabindex="-1"><a class="header-anchor" href="#步骤三-修改pom-xml" aria-hidden="true">#</a> 步骤三：修改pom.xml</h2>',2),p=(0,s.Uk)("找到工程根目录下的"),r=(0,s._)("code",null,"pom.xml",-1),u=(0,s.Uk)(", 根据你所使用的"),i=(0,s.Uk)("Maven多环境"),m=(0,s.Uk)("找到对应的"),b=(0,s._)("code",null,"<profiles>",-1),k=(0,s.Uk)(", 修改"),y=(0,s._)("code",null,"<database.type>",-1),h=(0,s.Uk)("属性值。"),v=(0,s.uE)('<div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>database.type</span><span class="token punctuation">&gt;</span></span>postgresql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>database.type</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>该值与步骤一中，<code>eurynome-cloud-database-&lt;database.type&gt;.yaml</code>的值对应。</p><p>在Maven编译的过程中，<code>&lt;database.type&gt;</code>的值会作为参数传递到各个服务的<code>boostrap.yml</code>配置中，与<code>boostrap.yml</code>中已有的信息拼装成Nacos中对应的配置名。通过这种方式实现Maven多环境、Nacos配置、不同数据库配置的联动</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token punctuation">-</span> <span class="token key atrule">data-id</span><span class="token punctuation">:</span> eurynome<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>database<span class="token punctuation">-</span>@database.type@.yaml\n  <span class="token key atrule">group</span><span class="token punctuation">:</span> common\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h2 id="步骤四-添加数据库jdbc-driver" tabindex="-1"><a class="header-anchor" href="#步骤四-添加数据库jdbc-driver" aria-hidden="true">#</a> 步骤四：添加数据库JDBC Driver</h2><p>目前，系统代码已经包含 <code>PostgreSQL</code> 、 <code>MySQL</code> (支持 <code>MySQL5</code> 和 <code>MySQL8</code> )和 <code>H2</code> 三种数据库的<code>JDBC Driver</code>, 如果你使用数据库不在此范围内，那么就需要在代码包<code>eurynome-cloud-data</code>的<code>pom.xml</code>中添加对应数据库的<code>JDBC Driver</code>。</p><h2 id="步骤五-编译工程代码" tabindex="-1"><a class="header-anchor" href="#步骤五-编译工程代码" aria-hidden="true">#</a> 步骤五：编译工程代码</h2><p>以上步骤完成之后，使用<code>mvn package</code>或<code>mvn install</code>命令，重新编译工程。</p><div class="custom-container danger"><p class="custom-container-title">注意</p><p>这一步非常重要，因为<code>Maven</code>无法真正做到与<code>yml</code>配置文件的传参，只有通过编译，在编译过程中用<code>pom.xml</code>中<code>&lt;database.type&gt;</code>的值，替换yml配置文件中的<code>@database.type@</code>模拟一种参数传递。</p></div>',7),g=(0,s.Uk)("修改配置之后，参考"),E=(0,s.Uk)("数据初始化"),q=(0,s.Uk)("章节进行数据库初始化工作。"),f=(0,s.uE)('<div class="custom-container tip"><p class="custom-container-title">提示</p><p>目前仅提供 <code>PostgreSQL</code> 和 <code>MySQL</code> 两种数据库对应的数据初始化脚本，其它数据库需要自己额外处理。如需要使用<code>Spring Data JPA</code>初始化机制，需要手动修改<code>spring.sql.init.*</code>相关参数。</p></div><h2 id="步骤六-修改工作流服务数据库类型" tabindex="-1"><a class="header-anchor" href="#步骤六-修改工作流服务数据库类型" aria-hidden="true">#</a> 步骤六：修改工作流服务数据库类型</h2><p>在 <code>eurynome-cloud-bpmn-ability</code> 模块中，找到<code>bootstrap.yml</code>。根据你所使用的数据库，修改配置<code>camunda.bpm.database.type</code>的值。</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p><code>camunda.bpm.database.type</code>支持的值有: <code>h2</code>, <code>mysql</code>, <code>mariadb</code>, <code>oracle</code>, <code>postgres</code>, <code>mssql</code>, <code>db2</code>.</p></div>',4),x={render:function(e,a){const n=(0,s.up)("RouterLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[o,(0,s._)("p",null,[t,(0,s.Wm)(n,{to:"/documents/%E5%A4%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.html"},{default:(0,s.w5)((()=>[c])),_:1}),l]),d,(0,s._)("p",null,[p,r,u,(0,s.Wm)(n,{to:"/documents/%E5%A4%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.html"},{default:(0,s.w5)((()=>[i])),_:1}),m,b,k,y,h]),v,(0,s._)("p",null,[g,(0,s.Wm)(n,{to:"/documents/%E6%95%B0%E6%8D%AE%E5%88%9D%E5%A7%8B%E5%8C%96.html"},{default:(0,s.w5)((()=>[E])),_:1}),q]),f],64)}}}}]);