-------------------------
关于静态资源文件的一些思考
一些现状，nginx是配置静态资源地址来解决。新的应用都采用前后端分离，即服务只提供数据。

1：如果是一个老旧的第三方服务，对于静态资源建议通过配置路由的方式解决，
即 http://ip:port/static  ||  http://ip:port/xxxx，方式缺点，需要多配置，容易重复；

2：新开发的应用，前后端分离的，资源在前端，不需要处理；

3：新开发的应用，前后端未分离的，采用单独的一个静态资源服务？建立一个类似于cdn??的应用。或者采用方式1；
- - - - - - - - - - - - - -
Felix:
现在做的这个，定位是对外提供服务，也就是rest接口。第一阶段首要考虑接口管理的便捷和安全。能涉及到的前端就是这个平台本身的页面
这个我觉得是要考虑用服务名的方式来进行访问，这样就解决了包括静态文件的问题。
我的意思是，我们现在做的每一个服务都需要考虑高可用的问题，后面应该都需要针对现在的服务搭建Nginx做负载。
玄胤:
我明白了你的意思，我们先把后端服务走起来。
其实现在的工程可以是一个无界面的工程。
Felix:
是这个意思。现在login的界面，只有在做类似于4A单点登录的情况下才会用到。
就是点登录，到我们这里拿token，会调到这个页面，除此以外应该用得会很少。这个目测是不会受到影响，当然实际上也难说。
就好比是有10个小程序，来接这个平台。我只要保证接口及数据提供正确，实际上不需要考虑它的界面文件的存储问题的。
玄胤:
我对最后这句的想法是，这十个程序未必都是一家公司开发的，也未必都是新开发的。
我们可能需要把他整个应用集成到我们的平台，当然也可能只把他们的后端服务接进来，但不排除，会使用他的前端。当然也可以在nginx上处理这些问题，也可以在我们的gateway上处理这些问题。

Felix: 2019-07-13
宇哥上面的理解没错。这个就是我们要做的中台，中台就是前台和后台的中间层。你说的别人后端服务，就是我们要接入我们中台的服务。中台一方面是管理后端服务，另一方面也是为其它的应用的前端提供数据。
现阶段还没有想到宇哥说的那种情况，使用别的项目的前端，可能实际上也会存在。
因为现在的java不像以前，就像小程序的那个脚手架，页面都可以集成在里面，不排除以后我们除了单纯的Rest服务以外，还会提供带有页面的接口。现在能想到的比较典型的就是工作流的设计器。

security.oauth2.sso.login-path
跳转到SSO的登录路径默认为/login.通过此项配置将单点登录地址跳转为前端分离应用。
SSO的事情 先放一放，我还没有想明白

玄胤:
我现在想做的事情 是统一登录，权限管控
韩帅:
auth 模块 负责 登陆 ,   网关 处理 资源访问,  资源访问  要学习下  spring security,  spring security oauth2, 你配置好了 资源服务器 ,
  跟你用 zuul 或是 gateway  或  其他的   是没关系的
张宇：
经测试，先把网关的工作精简，不要考虑SSO，他就是一个代理，我们已经调试好的AUTH服务，在helloworld,hrm服务中配置ResourceServerConfig，
配置
  security:
    oauth2:
      client:
    resource:

并通过@PreAuthorize("hasAuthority('ROLE_ADMIN')") 等方式进行权限控制



-------------------------------------