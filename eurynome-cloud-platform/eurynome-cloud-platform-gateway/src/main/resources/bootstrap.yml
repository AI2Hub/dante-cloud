server:
  port: 8847
spring:
  application:
    name: @artifactId@ #拿到POM文件中的值
  profiles:
    active: @profile.name@
  main:
    allow-bean-definition-overriding: true
  cloud:
    gateway:
      discovery:
        locator:
          #表明gateway开启服务注册和发现的功能，
          #并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，
          #这个router将以服务名开头的请求路径转发到对应的服务。
          enabled: true
          ##是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了），
          #比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上。
          lower-case-service-id: true
          ##比如url: http://wwww.zhangyu.com.cn/
          ##其中path: demo/**
          ##请求转发给http://wwww.zhangyu.com.cn/** ,去除掉demo前缀
          ##等于1去掉一级
          filters:
            - StripPrefix=1
    loadbalancer:
      retry:
        enabled: true # 内部已经默认开启这里列出来说明比较重要
    nacos:
      config:
        namespace: @config.namespace@
        server-addr: @config.server-addr@
        refreshable-dataids: luban-cloud-@profile.name@-platform.yml
        shared-dataids: luban-cloud-@profile.name@-platform.yml,luban-cloud-@profile.name@-database-@database.type@.yml,luban-cloud-@profile.name@-redis.yml
        file-extension: yml
      discovery:
        namespace: @config.namespace@
        server-addr: @discovery.server-addr@

ribbon:
  http:
    client:
      enabled: false
  okhttp:
    enabled: true # 用OkHttp代替HttpClient

feign:
  hystrix:
    enabled: true


management:
  endpoint:
    gateway:
      enabled: true
  endpoints:
    web:
      exposure:
        include: gateway

luban:
  gateway:
    token-check-uri: "http://luban-cloud-platform-oauth/oauth/check_token"
    white-list:
      - "/oauth/token"
      - "/oauth/check_token"
      - "/oauth/authorize"
      - "/captcha/getVerifiCode"
      - "/login/token"


token-check-uri: ${luban.platform.token-info-uri}

logging:
  level:
    org:
      springframework:
        cloud:
          gateway: DEBUG
        security: DEBUG
    cn:
      itcraftsman:
        luban: DEBUG

