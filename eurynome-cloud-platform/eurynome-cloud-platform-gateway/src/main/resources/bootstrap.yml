server:
  port: 8847
spring:
  application:
    name: @artifactId@ #拿到POM文件中的值
  profiles:
    active: @profile.name@
  main:
    allow-bean-definition-overriding: true
  cloud:
    gateway:
      discovery:
        locator:
          #表明gateway开启服务注册和发现的功能，
          #并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，
          #这个router将以服务名开头的请求路径转发到对应的服务。
          enabled: true
          ##是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了），
          #比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上。
          lower-case-service-id: true
          ##比如url: http://wwww.zhangyu.com.cn/
          ##其中path: demo/**
          ##请求转发给http://wwww.zhangyu.com.cn/** ,去除掉demo前缀
          ##等于1去掉一级
          filters:
            - StripPrefix=1
    loadbalancer:
      retry:
        enabled: true # 内部已经默认开启这里列出来说明比较重要
    nacos:
      config:
        namespace: @config.namespace@
        server-addr: @config.server-addr@
        file-extension: yaml
        shared-configs:
          - data-id: eurynome-cloud-environment.yaml
            group: @profile.name@
          - data-id: eurynome-cloud-database-@database.type@.yaml
            group: common
          - data-id: eurynome-cloud-redis.yaml
            group: common
          - data-id: eurynome-cloud-rest.yaml
            group: common
      discovery:
        namespace: @config.namespace@
        server-addr: @discovery.server-addr@
    sentinel:
      transport:
        port: 8719
        dashboard: @sentinel.server-addr@
# logback.xml和logback-spring.xml是SpringBoot默认为logback的配置文件
# logback.xml加载早于application.yml 无法从配置中心的配置文件中读取
# 解决方案：自定义logback配置文件的名称（不是SpringBoot默认的两种名称）并在配置中心指定logback配置文件的位置。
# 这样SpringBoot就不会在获取配置中心的配置前加载日志配置了
logging:
  config: classpath:logback-config-center.xml

herodotus:
  gateway:
    white-list:
      - "/oauth/token"
      - "/oauth/check_token"
      - "/oauth/authorize"
      - "/v2/api-docs/**"