server:
  port: 7070
spring:
  application:
    name:  @artifactId@ #拿到POM文件中的值
  profiles:
    active: @profile.name@
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      config:
        namespace: @config.namespace@
        server-addr: @config.server-addr@
        refreshable-dataids: eurynome-cloud-@profile.name@-platform.yml
        shared-dataids: eurynome-cloud-@profile.name@-platform.yml,eurynome-cloud-@profile.name@-redis.yml,eurynome-cloud-@profile.name@-database-@database.type@.yml,eurynome-cloud-@profile.name@-kafka.yml
        file-extension: yml
      discovery:
        namespace: @config.namespace@
        server-addr: @discovery.server-addr@
    sentinel:
      transport:
        port: 8719
        dashboard: @sentinel.server-addr@
  thymeleaf:
    mode: HTML
    cache: false
    prefix: classpath:/templates

#不同应用应是不同的配置，此处与hello_world相同，只为测试使用
security:
  oauth2:
    client:
      access-token-uri: ${eurynome.platform.access-token-uri}
      user-authorization-uri: ${eurynome.platform.user-authorization-uri}
      client-id: ${eurynome.platform.client-id}
      client-secret: ${eurynome.platform.client-secret}
      scope: ${eurynome.platform.scope}
      authorized-grant-types: password
    resource:
      token-info-uri: ${eurynome.platform.token-info-uri}
      user-info-uri: ${eurynome.platform.user-info-uri}


herodotus:
  platform:
    application:
      service-display-name: "用户中心"
      accessed-through-gateway: false
    security:
      interceptor:
        white-list:
          - "/v2/**"
          - "/login/token"
          - "/application/clientdetails"
          - "/user/findByUsername"
          - "/user/findByUserId"
          - "/captcha/getVerifiCode"
          - "/captcha/checkVerifiCode"

jetcache:
  statIntervalMinutes: 15
  areaInCacheName: false
  local:
    default:
      type: caffeine
      keyConvertor: fastjson
      limit: 1000
  remote:
    default:
      type: redis.lettuce
      keyConvertor: fastjson
      valueEncoder: java
      valueDecoder: java
      poolConfig:
        minIdle: ${spring.redis.lettuce.pool.min-idle}
        maxIdle: ${spring.redis.lettuce.pool.max-idle}
        maxTotal: ${spring.redis.lettuce.pool.max-active}
        maxWait: ${spring.redis.lettuce.pool.max-wait}
      uri:
        - redis://${spring.redis.host}:${spring.redis.port}/${spring.redis.database}

logging:
  level:
    org.springframework.security: DEBUG
    com.alibaba.nacos.client: WARN
    cn.herodotus.eurynome: DEBUG
