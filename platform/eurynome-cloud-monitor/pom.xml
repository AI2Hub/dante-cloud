<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>platform</artifactId>
        <groupId>cn.herodotus.eurynome</groupId>
        <version>2.7.0.0</version>
    </parent>

    <artifactId>eurynome-cloud-monitor</artifactId>
    <version>2.7.0.0</version>
    <name>eurynome-cloud-monitor</name>
    <description>eurynome-cloud-monitor</description>
    <dependencies>
        <dependency>
            <groupId>cn.herodotus.engine</groupId>
            <artifactId>web-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.herodotus.engine</groupId>
            <artifactId>facility-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-server</artifactId>
        </dependency>

    </dependencies>

    <!-- 需要以服务方式运行的包，按照以下进行build plugin的配置，以便支持docker打包；-->
    <!-- 而仅作为依赖的工具型代码包，类似于eurynome-cloud-common之类的包，则不需要这样配置，甚至不需要<build>部分内容 -->
    <!-- 如果当前包中包含，例如：字体、证书等资源，需要配置maven-resources-plugin，以防止重要静态资源文件被spring boot重新编码 -->
    <build>
        <plugins>
            <!-- spring boot 默认插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- docker打包插件 -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>

            <!-- 拷贝插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <!-- 主要原因是maven打包项目的时候对项目进行统一编码，增加过滤配置，让maven不对字体文件进行处理-->
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
